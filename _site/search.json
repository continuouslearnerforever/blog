[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog Listing",
    "section": "",
    "text": "nbdev experience\n\n\nHow fastai’s framework brings delight back to software creation using Jupyter Notebooks\n\n\n\nLearning Journey\n\n\nSoftware Development\n\n\n\n\n\n\n\n\n\nApr 9, 2025\n\n\nContinuous Learner\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome to My Learning Journey!\n\n\nSharing the Ups, Downs, and Discoveries of a Lifelong Learner\n\n\n\nLearning Journey\n\n\nPersonal\n\n\n\nAnnouncing the launch of my blog, a space for sharing my experiences, insights, and struggles in the world of continuous learning.\n\n\n\n\n\nFeb 19, 2025\n\n\nContinuous Learner\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "Hi there! I’m a lifelong learner passionate about continuous growth and the joy of discovery. I believe learning should be fun, and I strive to embrace that philosophy in everything I do.\n\n\nThis blog chronicles my learning journey, inspired by Jeremy Howard’s advice during the FastAI “Practical Deep Learning” course (https://course.fast.ai/). While the course initially recommended Fastpages for quick blog creation, that project has since been deprecated. Quarto (https://quarto.org/) is now the recommended tool, and it’s what I’m using to build this blog.\n\n\nAnother key influence has been Radek Osmulski’s book, “Meta Learning: How To Learn Deep Learning And Thrive In The Digital World” (https://rosmulski.gumroad.com/l/learn_machine_learning/blog?ref=radekosmulski.com), recommended by Jeremy during the course. Radek, a FastAI alumnus (https://radekosmulski.com/), emphasizes the power of sharing knowledge.\n\n\nInspired by these recommendations, I’m documenting my experiences, step-by-step. My goal is to not only solidify my own understanding but also to create a resource that might be helpful for others on similar paths. By reflecting on my learning process and identifying areas for improvement, I hope to accelerate my growth and contribute to the broader learning community."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome to My Learning Journey!",
    "section": "",
    "text": "Hello and welcome to my blog! I’m incredibly excited to embark on this journey of sharing my learning experiences with you. This space is dedicated to documenting the ups and downs, the “aha!” moments, and even the struggles that come with being a lifelong learner.\n\nI firmly believe that learning is a process, not a destination. It’s about embracing challenges, making mistakes, and constantly seeking new knowledge. And while the struggles can be tough, they’re often where the most profound learning happens. The knowledge we gain through overcoming obstacles tends to stick with us, shaping our understanding in lasting ways.\nBut learning isn’t just about theory. It’s about doing. It’s about applying what we learn, experimenting, and building those crucial “muscle memories” through practice. That’s why I’ll also be sharing the exercises, projects, and hands-on activities that are helping me internalize new concepts.\nMy primary focus will be on [Data Science, AI, Machine Learning], but I’ll also touch on meta-learning strategies and other topics that spark my curiosity. I’ll do this regularly.\nMy hope is that by sharing my journey – the good, the bad, and the everything in between – I can not only solidify my own understanding but also perhaps offer something useful to others on similar paths. Maybe you’ll find a helpful tip, a new perspective, or simply the encouragement to keep learning, even when it gets tough.\nLearning is an adventure, and it’s even more fun when shared. I invite you to join me on this journey, share your own experiences, and let’s learn together!"
  },
  {
    "objectID": "posts/nbdev/index.html",
    "href": "posts/nbdev/index.html",
    "title": "nbdev experience",
    "section": "",
    "text": "It seems like every year, software development gets more powerful, but also… more complicated. We have amazing tools, but juggling Git workflows, testing frameworks, documentation generators, packaging, and CI/CD pipelines can feel like a constant battle, draining energy that could be spent on actually building things. This friction, this cognitive overhead, is a real drag. It’s why the concept of Developer Experience (DX) has become so crucial – we need tools that help us, not hinder us.\n Caption: The familiar feeling of wrestling with tooling instead of code.\nRecently, I stumbled upon a tool that genuinely felt like a breath of fresh air in this complex landscape: nbdev from the brilliant minds at fast.ai.\nTheir tagline hits the nail on the head: “Create delightful software with Jupyter Notebooks.” And after spending some time exploring it, I have to agree.\nNow, this isn’t going to be a full nbdev tutorial. Jeremy Howard and Hamel Husain have already created a fantastic video walkthrough that does a much better job than I could:\n\nAnd the official nbdev tutorial documentation is clear and comprehensive.\nInstead, I want to share why nbdev clicked with me so quickly and why I found the experience, well, delightful. I followed Jeremy’s tutorial, and you can see my basic exploration code here: My nbdev demo repo.\nWhat Makes nbdev Special?\nThe core idea of nbdev is literate programming taken seriously for modern development. You write your code, your tests, and your documentation all within Jupyter Notebooks. Then, nbdev intelligently handles the rest:\n\nCode Export: It automatically exports clean, Python modules (.py files) from your notebooks.\nTesting: You write tests directly in notebook cells, often right after the code they test. nbdev can run these tests easily.\nDocumentation Generation: It converts your notebooks (including your prose, code, outputs, and images) into beautiful, searchable documentation websites using Quarto.\nPublishing: It simplifies packaging your project for PyPI.\nCI/CD Integration: It sets up GitHub Actions workflows to automatically test your code, build your docs, and check for sync issues between notebooks and modules on every push.\n\nReducing the Friction\nWhat truly impressed me was how seamless this felt. Tasks that normally require switching contexts, running multiple commands, and managing different configurations are streamlined into a few simple nbdev commands executed right from the terminal.\nNeed to make sure your notebooks and library code are in sync? nbdev_prepare. Want to run all your tests? nbdev_test. Ready to build your documentation? nbdev_docs. It handles the tedious plumbing, letting you focus on the logic and explanation.\nThis isn’t just about saving time; it’s about reducing the mental friction that discourages good practices. How often have you skipped writing a test or updating documentation because it felt like too much extra work? nbdev makes these essential tasks feel like a natural part of the development flow, not an afterthought.\nA More Joyful Way to Build\nFor me, the result was a feeling of liberation. I could focus on experimenting with code in a notebook, writing clear explanations alongside it, and adding tests organically. Knowing that nbdev would handle the conversion to a proper Python library, generate the docs, and set up the CI pipeline allowed me to stay focused on the problem I was trying to solve.\nIt truly felt like it brought some of the joy back into the process, removing unnecessary complexity and letting the power of notebooks shine not just for exploration, but for building robust software.\nI’ve only scratched the surface, but my initial experience has been incredibly positive. I plan to use nbdev for future projects, especially those involving data science, research, or anywhere literate programming makes sense.\nHuge thanks to Jeremy Howard and the entire fast.ai team for creating and sharing nbdev. It’s a fantastic tool that genuinely improves the developer experience and makes building software delightful again. If you haven’t already, I highly recommend giving it a try!"
  }
]